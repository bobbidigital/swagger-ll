{
  "swagger": "2.0",
  "info": {
    "version": "0.1",
    "title": "League Lytics Football API",
    "description": "The API to football related data on League Lytics"
  },
  "host": "app.leaguelytics.com",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/players": {
      "get": {
        "summary": "Active Players",
        "description": "The players endpoint returns general information regarding players in the system. The endpoint is paginated and will need to be called several times to traverse everything.",
        "parameters": [{
            "name": "limit",
            "in": "query",
            "description": "The number of players to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10
          }, {
            "name": "page",
            "in": "query",
            "description": "The page of results to be returned.",
            "type": "integer",
            "format": "int32",
            "default": 1
          }, {
            "name": "position",
            "in": "query",
            "description": "Returns only players matching the position. Valid value is one of QB, RB, WR, TE, K or DEF.",
            "type": "string"
          }, {
            "name": "team",
            "in": "query",
            "description": "Returns only players that belong to the team specified. The value should be the team's unique ID",
            "type": "integer",
            "format": "int32"
          }

        ],
        "tags": [
          "Players"
        ],
        "responses": {
          "200": {
            "description": "An array of players",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Player"
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "$schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{id}": {
      "get": {
        "summary": "Returns the player specified by id",
        "description": "This endpoint returns a player object specified by id",
        "parameters": [{
          "name": "id",
          "in": "path",
          "type": "integer",
          "required": true,
          "description": "The ID of the player you wish to retrieve"
        }],
        "tags": [
          "Players"
        ],
        "responses": {
          "200": {
            "description": "The player was found and returned",
            "$schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "404": {
            "description": "The player was not found"
          }
        }
      }
    },
    "/teams": {
      "get": {
        "summary": "Teams API",
        "descripton": "Returns all 32 teams and Free agents",
        "parameters": [{
          "name": "conference",
          "in": "query",
          "description": "Filter teams returned by conference. Valid values are AFC and NFC",
          "type": "string",
          "format": "string"
        }, {
          "name": "division",
          "in": "query",
          "description": "Filter teams by division. Valid values are NORTH, SOUTH, EAST, WEST",
          "type": "string",
          "format": "string"
        }],
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "The team(s) were found and returned",
            "$schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            }
          }
        }
      }
    },
    "/teams/{id}": {
      "get": {
        "summary": "Returns specified team",
        "description": "Returns the team specified by id",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the desired team",
          "type": "integer",
          "required": true
        }],
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "The team was found and returned",
            "$schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "404": {
            "description": "The team was not found"
          }
        }
      }
    },
    "/teams/{id}/players": {
      "get": {
        "summary": "Return all players for a team",
        "description": "Returns all player objects that belong to the specified team",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the desired team",
          "type": "integer",
          "required": true
        }],
        "tags": [
          "Teams",
          "Players"
        ],
        "responses": {
          "200": {
            "description": "The request completed successfully",
            "$schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Player"
              }
            }
          },
          "default": {
            "description": "The team specified by ID could not be found",
            "$schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Player": {
      "type": "object",
      "properties": {
        "player_id": {
          "type": "integer",
          "description": "Unique identifer for the player object"
        },
        "first_name": {
          "type": "string",
          "description": "Player's first name"
        },
        "last_name": {
          "type": "string",
          "description": "Player's last name"
        },
        "posiiton": {
          "type": "string",
          "description": "Player's normal playing position. Valid values are QB, RB, WR, TE, K and DEF"
        },
        "picture_url": {
          "type": "string",
          "description": "URL pointing to an image of the assoicated player"
        },
        "team_id": {
          "type": "integer",
          "description": "Unique idenfiter for the team that the player belongs to"
        }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "team_id": {
          "type": "string",
          "description": "Unique identifier for the team object"
        },
        "conference": {
          "type": "string",
          "description": "Name of the conference the team belongs to. Valid values are NFC and AFC"
        },
        "division": {
          "type": "string",
          "description": "Name of the division the team belongs to. Valid values are NORTH, SOUTH, EAST and WEST"
        },
        "city": {
          "type": "string",
          "description": "The name of the city the team is based out of. Example: Atlanta"
        },
        "name": {
          "type": "string",
          "description": "The standalone team name. Example: Falcons"
        },
        "logo_url": {
          "type": "string",
          "description": "The url for the team's logo image"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "The HTTP status code returned"
        },
        "message": {
          "type": "string",
          "description": "The error message returned with the query"
        }
      }
    }
  }
}